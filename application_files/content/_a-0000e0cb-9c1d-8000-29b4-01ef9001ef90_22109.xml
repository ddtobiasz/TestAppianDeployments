<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<contentHaul xmlns:a="http://www.appian.com/ae/types/2009">
    <versionUuid>_a-0000e0cb-9c1d-8000-29b4-01ef9001ef90_22654</versionUuid>
    <rule>
        <name>QACC_SendTaskFromReport</name>
        <uuid>_a-0000e0cb-9c1d-8000-29b4-01ef9001ef90_22109</uuid>
        <description>Interface to send an ad-hoc task from a task report [Tasking]</description>
        <parentUuid>c2b7d266-2844-4432-bc65-200cc7c30ca3</parentUuid>
        <visibility>
            <advertise>false</advertise>
            <hierarchy>true</hierarchy>
            <indexable>true</indexable>
            <quota>false</quota>
            <searchable>true</searchable>
            <system>false</system>
            <unlogged>false</unlogged>
        </visibility>
        <definition>load(
  local!recordId,
  local!assignee,
  local!taskDetails,
  local!taskedOn,
  local!taskFrom,
  local!deadline,
  local!sendTaskSuccess,
  {
    /* If the user just attempted to send a new task, inform them whether they were successful or not */
    if(
      not(isnull(ri!sendTaskSuccess)),
      if(
        ri!sendTaskSuccess,
        #"SYSTEM_SYSRULES_richTextDisplayField"(
          value: #"SYSTEM_SYSRULES_richTextItem"(
            text: "Your task has been successfully sent!"
          ),
          align: "CENTER"
        ),
        #"SYSTEM_SYSRULES_richTextDisplayField"(
          value: "Your task was NOT sent successfully.
Please try again.",
          align: "CENTER"
        )
      ),
      {}
    ),
    #"SYSTEM_SYSRULES_sectionLayout_v1"(
      label: if(
        or(isnull(local!recordId), length(local!recordId) = 0),
        "Send Task",
        "Send Task about " &amp; #"f1fc00f1-f8cf-44b8-9cf1-f68b62f582dc_GETONERECORD"(local!recordId).title
      ),
      showWhen: ri!sendingTask,
      contents: {
        #"SYSTEM_SYSRULES_pickerFieldRecords"(
          label: "Quick App Called Crap",
          instructions: "Select the record this work is related to. Details of this record will be embedded in the task form.",
          maxSelections: 1,
          recordType: #"_a-0000e0cb-9c1d-8000-29b4-01ef9001ef90_21961",
          value: local!recordId,
          saveInto: local!recordId,
          required: true
        ),
        #"_a-0000e0cb-9c1d-8000-29b4-01ef9001ef90_22089"(
          assignee: local!assignee,
          taskDetails: local!taskDetails,
          deadline: local!deadline
        ),
        #"SYSTEM_SYSRULES_ButtonLayout"(
          primaryButtons: {
            #"SYSTEM_SYSRULES_ButtonWidget"(
              label: "Send Task",
              style: "PRIMARY",
              confirmMessage: if(
                or(
                  isnull(local!assignee),
                  isusermemberofgroup(local!assignee, #"_a-0000e0cb-9c1d-8000-29b4-01ef9001ef90_21949")
                ),
                "",
                "Are you sure you want to send a task to this user? They will receive access to all records in the Quick App Called Crap application."
              ),
              value: false,
              saveInto: {
                /* On submitting, start the Send Task process and pass parameters into it. *
                 * If successful, clear the form values for next time. Otherwise, do not,  *
                 * as the user may wish to try again.                                      */
                a!save(local!taskedOn, now()),
                a!save(local!taskFrom, loggedinuser()),
                #"SYSTEM_SYSRULES_startProcess"(
                  processModel: #"_a-0000e0cb-9c1d-8000-29b4-01ef9001ef90_21965",
                  processParameters: {
                    assignee: local!assignee,
                    taskDetails: local!taskDetails,
                    deadline: local!deadline,
                    taskedOn: local!taskedOn,
                    taskFrom: local!taskFrom,
                    recordId: local!recordId
                  },
                  onSuccess: {
                    a!save(ri!sendTaskSuccess, true),
                    a!save(local!assignee, null),
                    a!save(local!taskDetails, null),
                    a!save(local!deadline, null),
                    a!save(local!taskedOn, null),
                    a!save(local!taskFrom, null),
                    a!save(local!recordId, null),
                    ri!sendingTask
                  },
                  onError: {
                    a!save(ri!sendTaskSuccess, false)
                  }
                )
              },
              validate: true
            )
          },
          secondaryButtons: {
            #"SYSTEM_SYSRULES_ButtonWidget"(
              label: "Cancel",
              style: "NORMAL",
              value: false,
              saveInto: ri!sendingTask,
              validate: false
            )
          }
        )
      }
    )
  }
)</definition>
        <namedTypedValue>
            <name>sendingTask</name>
            <type>
                <name>boolean</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>sendTaskSuccess</name>
            <type>
                <name>boolean</name>
                <namespace>http://www.w3.org/2001/XMLSchema</namespace>
            </type>
        </namedTypedValue>
        <metadataExpr></metadataExpr>
        <preferredEditor>interface</preferredEditor>
        <offlineEnabled>false</offlineEnabled>
    </rule>
    <roleMap public="true">
        <role inherit="true" allowForAll="false" name="readers">
            <users/>
            <groups/>
        </role>
        <role inherit="true" allowForAll="false" name="authors">
            <users/>
            <groups/>
        </role>
        <role inherit="true" allowForAll="false" name="administrators">
            <users/>
            <groups/>
        </role>
        <role inherit="false" allowForAll="false" name="denyReaders">
            <users/>
            <groups/>
        </role>
        <role inherit="false" allowForAll="false" name="denyAuthors">
            <users/>
            <groups/>
        </role>
        <role inherit="false" allowForAll="false" name="denyAdministrators">
            <users/>
            <groups/>
        </role>
    </roleMap>
    <history>
        <historyInfo versionUuid="_a-0000e0cb-9c1d-8000-29b4-01ef9001ef90_22654"/>
    </history>
</contentHaul>
